{
    "name": "geminicommit",
    "displayName": "Gemini Commit",
    "description": "Automatically generate commit messages using AI",
    "version": "1.6.0",
    "publisher": "VizzleTF",
    "repository": {
        "type": "git",
        "url": "https://github.com/VizzleTF/GeminiCommit.git"
    },
    "bugs": {
        "url": "https://github.com/VizzleTF/GeminiCommit/issues"
    },
    "engines": {
        "vscode": "^1.93.0"
    },
    "categories": [
        "Machine Learning",
        "Programming Languages",
        "AI"
    ],
    "tags": [
        "Machine Learning",
        "Programming Languages",
        "AI Assistant",
        "AI",
        "Autocommit",
        "Git"
    ],
    "activationEvents": [
        "onCommand:geminicommit.generateCommitMessage",
        "onView:geminiCommitView"
    ],
    "icon": "icon.png",
    "main": "./dist/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "geminicommit.generateCommitMessage",
                "title": "GeminiCommit: Generate Message",
                "icon": "$(rocket)"
            },
            {
                "command": "geminicommit.setApiKey",
                "title": "GeminiCommit: Set Gemini API Key"
            },
            {
                "command": "geminicommit.setCustomApiKey",
                "title": "GeminiCommit: Set Custom API Key"
            }
        ],
        "menus": {
            "scm/title": [
                {
                    "when": "scmProvider == git",
                    "command": "geminicommit.generateCommitMessage",
                    "group": "navigation"
                }
            ]
        },
        "views": {
            "scm": [
                {
                    "id": "geminiCommitView",
                    "name": "GeminiCommit"
                }
            ]
        },
        "configuration": {
            "title": "GeminiCommit",
            "properties": {
                "geminiCommit.useCustomEndpoint": {
                    "type": "boolean",
                    "default": false,
                    "description": "Use a custom endpoint for AI-generated commit messages"
                },
                "geminiCommit.promptForRefs": {
                    "type": "boolean",
                    "default": false,
                    "description": "Prompt for entering refs (e.g., issue numbers) when generating commit messages"
                },
                "geminiCommit.geminiModel": {
                    "type": "string",
                    "enum": [
                        "gemini-1.0-pro",
                        "gemini-1.5-pro",
                        "gemini-1.5-flash"
                    ],
                    "default": "gemini-1.5-flash",
                    "description": "Select Gemini model for commit message generation"
                },
                "geminiCommit.commitLanguage": {
                    "type": "string",
                    "enum": [
                        "english",
                        "japan",
                        "russian"
                    ],
                    "default": "english",
                    "description": "Language for generated commit messages"
                },
                "geminiCommit.commitMessageLength": {
                    "type": "string",
                    "enum": [
                        "short",
                        "long",
                        "custom"
                    ],
                    "default": "long",
                    "description": "Length of generated commit messages"
                },
                "geminiCommit.customInstructions": {
                    "type": "string",
                    "default": "",
                    "description": "Custom instructions for commit message generation (used when commitMessageLength is set to 'custom')"
                },
                "geminiCommit.customEndpoint": {
                    "type": "string",
                    "default": "",
                    "description": "Custom endpoint URL for AI-generated commit messages"
                },
                "geminiCommit.customModel": {
                    "type": "string",
                    "default": "",
                    "description": "Model name to use with the custom endpoint"
                },
                "geminiCommit.onlyStagedChanges": {
                    "type": "boolean",
                    "default": false,
                    "description": "Generate commit message only for staged changes"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "package": "vsce package"
    },
    "devDependencies": {
        "@types/glob": "^7.2.0",
        "@types/mocha": "^10.0.7",
        "@types/node": "^20.11.10",
        "@types/vscode": "^1.93.0",
        "@typescript-eslint/eslint-plugin": "^7.0.0",
        "@typescript-eslint/parser": "^7.18.0",
        "@vscode/test-electron": "^2.3.9",
        "@vscode/vsce": "^3.1.0",
        "eslint": "^8.56.0",
        "glob": "^8.1.0",
        "mocha": "^10.2.0",
        "typescript": "^5.3.3"
    },
    "dependencies": {
        "axios": "^1.6.7"
    }
}
